CREATE DATABASE IF NOT EXISTS VARO_BANK_DEMO;
   USE DATABASE VARO_BANK_DEMO;

   CREATE SCHEMA IF NOT EXISTS BANKING;

   -- Customer Table
   CREATE TABLE IF NOT EXISTS BANKING.CUSTOMERS (
       CUSTOMER_ID STRING PRIMARY KEY,
       FIRST_NAME STRING,
       LAST_NAME STRING,
       EMAIL STRING,
       PHONE STRING,
       ADDRESS STRING,
       DATE_OF_BIRTH DATE,
       INCOME DECIMAL(15,2),
       OCCUPATION STRING,
       CREATED_DATE TIMESTAMP_NTZ
   );

   -- Account Table
   CREATE TABLE IF NOT EXISTS BANKING.ACCOUNTS (
       ACCOUNT_ID STRING PRIMARY KEY,
       CUSTOMER_ID STRING,
       ACCOUNT_TYPE STRING,
       BALANCE DECIMAL(15,2),
       INTEREST_RATE DECIMAL(5,2),
       OPEN_DATE DATE,
       STATUS STRING,
       FOREIGN KEY (CUSTOMER_ID) REFERENCES BANKING.CUSTOMERS(CUSTOMER_ID)
   );

   -- Transaction Table (Enhanced with IS_FRAUD for ML)
   CREATE TABLE IF NOT EXISTS BANKING.TRANSACTIONS (
       TRANSACTION_ID STRING PRIMARY KEY,
       ACCOUNT_ID STRING,
       TRANSACTION_TYPE STRING,
       AMOUNT DECIMAL(15,2),
       TRANSACTION_DATE TIMESTAMP_NTZ,
       DESCRIPTION STRING,
       CATEGORY STRING,
       IS_FRAUD BOOLEAN,
       FOREIGN KEY (ACCOUNT_ID) REFERENCES BANKING.ACCOUNTS(ACCOUNT_ID)
   );

   -- Customer Feedback Table (Unstructured Data)
   CREATE TABLE IF NOT EXISTS BANKING.CUSTOMER_FEEDBACK (
       FEEDBACK_ID STRING PRIMARY KEY,
       CUSTOMER_ID STRING,
       FEEDBACK_TEXT STRING,
       FEEDBACK_DATE TIMESTAMP_NTZ,
       SENTIMENT STRING,
       FOREIGN KEY (CUSTOMER_ID) REFERENCES BANKING.CUSTOMERS(CUSTOMER_ID)
   );

   -- Loans Table
   CREATE TABLE IF NOT EXISTS BANKING.LOANS (
       LOAN_ID STRING PRIMARY KEY,
       CUSTOMER_ID STRING,
       LOAN_TYPE STRING,
       LOAN_AMOUNT DECIMAL(15,2),
       INTEREST_RATE DECIMAL(5,2),
       TERM_MONTHS INTEGER,
       START_DATE DATE,
       STATUS STRING,
       FOREIGN KEY (CUSTOMER_ID) REFERENCES BANKING.CUSTOMERS(CUSTOMER_ID)
   );

   -- Credit Cards Table
   CREATE TABLE IF NOT EXISTS BANKING.CREDIT_CARDS (
       CARD_ID STRING PRIMARY KEY,
       CUSTOMER_ID STRING,
       CREDIT_LIMIT DECIMAL(15,2),
       CURRENT_BALANCE DECIMAL(15,2),
       DUE_DATE DATE,
       MIN_PAYMENT DECIMAL(15,2),
       INTEREST_RATE DECIMAL(5,2),
       ISSUE_DATE DATE,
       STATUS STRING,
       FOREIGN KEY (CUSTOMER_ID) REFERENCES BANKING.CUSTOMERS(CUSTOMER_ID)
   );

   -- Fraud Detection Table
   CREATE TABLE IF NOT EXISTS BANKING.FRAUD_DETECTION (
       FRAUD_ID STRING PRIMARY KEY,
       TRANSACTION_ID STRING,
       CUSTOMER_ID STRING,
       DETECTION_DATE TIMESTAMP_NTZ,
       FRAUD_TYPE STRING,
       RISK_SCORE DECIMAL(5,2),
       STATUS STRING,
       FOREIGN KEY (TRANSACTION_ID) REFERENCES BANKING.TRANSACTIONS(TRANSACTION_ID),
       FOREIGN KEY (CUSTOMER_ID) REFERENCES BANKING.CUSTOMERS(CUSTOMER_ID)
   );
